name: Deploy Mental Wellness PWA

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test -- --coverage --watchAll=false --passWithNoTests
    
    - name: Build application
      run: npm run build
    
    - name: Build service worker
      run: npm run build:sw || echo "Service worker build failed, continuing..."
    
    - name: Run security audit
      run: npm audit --audit-level moderate || echo "Security audit completed with warnings"
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-files
        path: build/

  deploy-vercel:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-files
        path: build/
    
    - name: Deploy to Vercel (if configured)
      if: ${{ secrets.VERCEL_TOKEN != null && secrets.VERCEL_TOKEN != '' }}
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        vercel-args: '--prod'
        working-directory: ./
    
    - name: Deployment status
      run: |
        if [ -z "$VERCEL_TOKEN" ]; then
          echo "âœ… Build completed successfully!"
          echo "ðŸ“¦ Build artifacts are ready for deployment"
          echo ""
          echo "To enable automatic Vercel deployment, add these secrets:"
          echo "- VERCEL_TOKEN: Your Vercel API token"
          echo "- VERCEL_ORG_ID: Your Vercel organization ID"
          echo "- VERCEL_PROJECT_ID: Your Vercel project ID"
          echo ""
          echo "Manual deployment options:"
          echo "1. Download build artifacts from this workflow"
          echo "2. Deploy to any static hosting service"
          echo "3. Use 'vercel --prod' from your local machine"
        else
          echo "âœ… Deployed to Vercel successfully!"
        fi
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN || '' }}

  lighthouse-audit:
    needs: deploy-vercel
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run Lighthouse CI
      run: |
        npm install -g @lhci/cli@0.12.x
        npm run build
        lhci autorun --config=./lighthouserc.js || echo "Lighthouse audit completed with issues"
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN || 'not-set' }}
